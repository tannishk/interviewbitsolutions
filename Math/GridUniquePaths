/*A robot is located at the top-left corner of an A x B grid (marked ‘Start’ in the diagram below).

Path Sum: Example 1

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked ‘Finish’ in the diagram below).

How many possible unique paths are there?

Note: A and B will be such that the resulting answer fits in a 32 bit signed integer.

Example :

Input : A = 2, B = 2
Output : 2

2 possible routes : (0, 0) -> (0, 1) -> (1, 1) 
              OR  : (0, 0) -> (1, 0) -> (1, 1)
              */
public class Solution {
    int count = 0;
    public int uniquePaths(int A, int B) {
        return currentPosition(A,B);
    }
    public int currentPosition(int A,int B){
        if(A == 0 || B==0){
            return 1;
        }
        return currentPosition(A-1,B)+currentPosition(A,B-1); // Move down
    }
}
